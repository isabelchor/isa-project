@page "/login"
@inject IJSRuntime js
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage MySession
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@using ModelClass
@using DB



<div class="form-signin text-center w-50 m-2">
    <label for="inputName" class="sr-only">Name</label>
    <input @bind-value="Name" type="text" id="inputName" class="form-control m-1" placeholder="Name" required autofocus>
    <label for="inputName" class="sr-only">Password</label>
    <input @bind-value="Password" type="password" id="inputpass" class="form-control m-1" placeholder="password" required>
    <button @onclick="CheckLogin" class="btn btn-lg btn-primary btn-block m-1" type="submit">Sign in</button>
    <div class="mt-5 mb-3 text-muted">@s</div>
</div>



@code {
    private string Name = "";
    private string Birthday = "";
    private string Password = "";
    private string s = "";
    private artist at;


    List<artist> list;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var artistSession = await MySession.GetAsync<artist>("artistSession");
        if (artistSession.Success)
        {
            navigationManager.NavigateTo($"/details/{((artist)(artistSession.Value)).artistID}");
        }
        else
            navigationManager.NavigateTo("login");

    }

    private async Task CheckLogin()
    {
        ArtisiDB cdb = new ArtisiDB();
        at = await cdb.login(Name, Password);
        if (at != null && at.artistID != 0)
        {
            await MySession.SetAsync("artistSession", at);
            navigationManager.NavigateTo($"/details/{at.artistID}");
        }
        else
        {
            s = "Incorrect username or password";
        }

    }
}

