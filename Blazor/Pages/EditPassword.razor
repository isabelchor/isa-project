@page "/editPassword/{Id:int}"
@inject NavigationManager uriHelper
@inject IJSRuntime js
@using ModelClass
@using DB
<div class="form-signin text-center w-50">
    <img class="mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">
    <h1 class="h3 mb-3 font-weight-normal">Edit your password</h1>


    <label for="oldPass" class="sr-only">Enter Old Password</label>
    <input @bind-value="oldpass" type="password" id="oldPass" class="form-control m-1" placeholder="Enter Old Password" required autofocus>


    <label for="NewPass1" class="sr-only">Enter New Password</label>
    <input @bind-value="newpass1" type="password" id="NewPass1" class="form-control m-1" placeholder="Enter New Password" required autofocus>


    <label for="NewPass2" class="sr-only">Re-enter New Password</label>
    <input @bind-value="newpass2" type="password" id="NewPass2" class="form-control m-1" placeholder="Re-enter New Password" required autofocus>


    <button @onclick="doEdit" class="btn btn-lg btn-primary btn-block m-1" type="submit">Update</button>
</div>




@code {
    [Parameter] public int id { get; set; }
    private string oldpass = "";
    private string newpass1 = "";
    private string newpass2 = "";
    private artist art;


    protected override void OnParametersSet()
    {
        if (id == null)
            id = 0;
    }


    async Task doEdit()
    {
        ArtisiDB artisiDB = new ArtisiDB();
        art = (artist)artisiDB.GetRowByPK(id);
        if (newpass1 == newpass2 && oldpass == (string)artisiDB.GetPassword(id) && newpass1 != "")
        {
            int n = artisiDB.Update(art);
            if (n > 0)
            {
                await js.InvokeVoidAsync("alert", $"Password updated successfully!");
                uriHelper.NavigateTo("/");
            }
            else
            {
                await js.InvokeVoidAsync("alert", $"Password update failed!");
                uriHelper.NavigateTo("/");
            }
        }
        else
        {
            await js.InvokeVoidAsync("alert", $"Passwords are not the same OR The old password is incorrect !");
        }
    }
}
